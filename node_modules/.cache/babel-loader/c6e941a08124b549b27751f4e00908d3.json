{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport function useInterval(callback, delay) {\n  var savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval"],"sources":["/Users/daniilssokolovs/react-tetris/src/hooks/useInterval.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;EAC3C,IAAMC,aAAa,GAAGJ,MAAM,EAA5B,CAD2C,CAE3C;;EACAD,SAAS,CAAC,YAAM;IACdK,aAAa,CAACC,OAAd,GAAwBH,QAAxB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAH2C,CAO3C;;EACAH,SAAS,CAAC,YAAM;IACd,SAASO,IAAT,GAAgB;MACdF,aAAa,CAACC,OAAd;IACD;;IACD,IAAIF,KAAK,KAAK,IAAd,EAAoB;MAClB,IAAMI,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAAtB;MACA,OAAO,YAAM;QACXM,aAAa,CAACF,EAAD,CAAb;MACD,CAFD;IAGD;EACF,CAVQ,EAUN,CAACJ,KAAD,CAVM,CAAT;AAWD"},"metadata":{},"sourceType":"module"}