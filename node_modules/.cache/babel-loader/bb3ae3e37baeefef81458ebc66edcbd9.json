{"ast":null,"code":"import _slicedToArray from \"/Users/daniilssokolovs/react-tetris/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daniilssokolovs/react-tetris/src/components/Tetris.js\";\n\nimport React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers'; // Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // Custom Hooks\n\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus'; // Components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nvar Tetris = function Tetris() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropTime = _useState2[0],\n      setDropTime = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameOver = _useState4[0],\n      setGameOver = _useState4[1];\n\n  var _usePlayer = usePlayer(),\n      _usePlayer2 = _slicedToArray(_usePlayer, 4),\n      player = _usePlayer2[0],\n      updatePlayerPos = _usePlayer2[1],\n      resetPlayer = _usePlayer2[2],\n      playerRotate = _usePlayer2[3];\n\n  var _useStage = useStage(player, resetPlayer),\n      _useStage2 = _slicedToArray(_useStage, 3),\n      stage = _useStage2[0],\n      setStage = _useStage2[1],\n      rowsCleared = _useStage2[2];\n\n  var _useGameStatus = useGameStatus(rowsCleared),\n      _useGameStatus2 = _slicedToArray(_useGameStatus, 6),\n      score = _useGameStatus2[0],\n      setScore = _useGameStatus2[1],\n      rows = _useGameStatus2[2],\n      setRows = _useGameStatus2[3],\n      level = _useGameStatus2[4],\n      setLevel = _useGameStatus2[5];\n\n  console.log('re-render');\n\n  var movePlayer = function movePlayer(dir) {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  var startGame = function startGame() {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  var drop = function drop() {\n    //Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(function (prev) {\n        return prev + 1;\n      }); //Increase speed\n\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  var keyUp = function keyUp(_ref) {\n    var keyCode = _ref.keyCode;\n\n    if (!gameOver) {\n      if (keyCode === 40) {\n        console.log(\"interval on\");\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  var dropPlayer = function dropPlayer() {\n    console.log(\"interval off\");\n    setDropTime(null);\n    drop();\n  };\n\n  var move = function move(_ref2) {\n    var keyCode = _ref2.keyCode;\n\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  }; //Make tetromino move by themself\n\n\n  useInterval(function () {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: function onKeyDown(e) {\n      return move(e);\n    },\n    onKeyUp: keyUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledTetris, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stage, {\n    stage: stage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"aside\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, gameOver ? /*#__PURE__*/React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    text: \"Score: \".concat(score),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    text: \"Rows: \".concat(rows),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    text: \"Level: \".concat(level),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StartButton, {\n    callback: startGame,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"names":["React","useState","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","console","log","movePlayer","dir","x","y","startGame","drop","prev","collided","pos","keyUp","keyCode","dropPlayer","move","e"],"sources":["/Users/daniilssokolovs/react-tetris/src/components/Tetris.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  }\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  }\n\n  const drop = () => {\n    //Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      //Increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false })\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  }\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        console.log(\"interval on\")\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  }\n\n\n\n  const dropPlayer = () => {\n    console.log(\"interval off\")\n    setDropTime(null);\n    drop();\n  }\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  }\n\n  //Make tetromino move by themself\n  useInterval(() => {\n    drop();\n  }, dropTime)\n\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}